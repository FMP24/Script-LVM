#!/bin/bash
# Libreria de funciones para el script LV20G.sh 
### Variables ###
bold="\e[1m"
rojo="\e[31m"
naranja="\e[33m"
cian="\e[36m"
reset="\e[0m"

### Funciones ###

#1. Comprobar root
#   si no es root, envía un mensaje de error diciendo que se ejecute como root

#Autor: Mario Zayas García
#Descripcion: Esta funcion comprobará si el usuario tiene permisos de root 

function f_comprobarroot
if [[ $USER != "root" ]]; then
   echo "Este script debe ser ejecutado como root" 
   exit 1
fi

#2. Internet
#   comprueba internet
#   mensaje de error: comprueba tu conexión a internet

function f_conexion {
        if ping -c 1 -q 8.8.8.8 > /dev/null; then
        return 0
        else
        echo "ERROR: Comprueba tu conexión"
        return 1
        fi
}

#3. Instalación paquetes
#   Primero actualizar repositorios
#   Comprobar si no están los paquetes y en ese caso instalarlos.
#   paquetes: lvm2, mkfs

function f_existepaquete{
if which lvm2 && which mkfs; then
return 0
else 
return 1 
apt update -y && apt install -y lvm2 mkfs
fi
}

#4. Comprobar que discos se van a utilizar para el vg
#   Buscar 4 discos vacíos y guardarlos variables $disco1, 2, 3, 4...
#   Avisar al usuario de los discos utilizados
#   Salir del programa en caso de no tener 4 discos como se especifica.

function f_comprobar_part {
disco4="0"
j=1
  for i in $(lsblk -n -d -o NAME); do
    if [ "$(lsblk -o NAME,TYPE | awk '$2=="part"{print $1}' | egrep -o "$i")" = "" ]; then
      #Variable Dinámica Incremental disco1, 2, 3, 4...
      #Se les asignan los dispositivos vacios detectados con la condición del if
      eval disco$j="\/dev\/$i"
      j=$((j+1)) 
      return 0
    else
      return 1
    fi
  done
  if [disco4 = "0"]; then
      echo "No hay suficientes discos (Se necesitan 4)"
      return 1
      exit 1
  fi
}

#5. crear vg
#   crear vg de nombre "vg01-script"
#   añadir los discos seleccionados al grupo vg01 

function f_crearvg {
  # Crear particiones en los discos (usando sfdisk)
  for disco in $disco1 $disco2 $disco3 $disco4; do
    echo "Creando partición en $disco"
    echo "label: dos" | sudo sfdisk $disco >> /dev/null
    echo ",,8e," | sudo sfdisk $disco >> /dev/null
    partprobe $disco >> /dev/null
  done
  # Crear el VG
  vgcreate vg01 $disco1"1" $disco2"1" $disco3"1" $disco4"1" >> /dev/null
  echo "Creando el grupo de volumenes."
}

#6. crear LV
#   Comprobar si hay tamaño suficiente, 
#   si no lo hay salir del programa sin hacer nada.
#   si lo hay, crear LV de 20GB sobre "vg01-script" llamado "lv20gb"

#Autor: Juan Carlos Martín Muñoz
#Descripción: Comprueba si hay tamaño suficiente en el grupo de volumenes (vg01), si no lo hay saldra del programa sin hacer nada. Si lo hay, creara un LV de 20GB

VG_NAME=vg01-script
LV_SIZE=20G
VG_FREE=$(vgdisplay -c $VG_NAME | cut -d ":" -f 16)
function f_crearlv {
if [ $LV_SIZE -lt $VG_FREE ]; then
  lvcreate -L $LV_SIZE -n lv20gb $VG_NAME
	return 0
else
  echo "No hay suficiente espacio libre en el grupo de volumenes. Saliendo del script."
  return 1
	exit 1
fi
}

#7. asignar sistema de ficheros al LV
#   ext4
